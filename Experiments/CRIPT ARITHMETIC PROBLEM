import itertools

def is_valid(puzzle, letters, perm):
    mapping = dict(zip(letters, perm))
    left, right = puzzle.split("=")
    left_terms = left.split("+")
    
    try:
        left_sum = sum(int("".join(str(mapping[ch]) for ch in term.strip())) for term in left_terms)
        right_val = int("".join(str(mapping[ch]) for ch in right.strip()))
    except ValueError:
        return False
    
    return left_sum == right_val

def solve_crypt_arithmetic(puzzle):
    letters = set([ch for ch in puzzle if ch.isalpha()])
    if len(letters) > 10:
        print("Too many unique letters! (Max 10)")
        return

    letters = list(letters)

    for perm in itertools.permutations(range(10), len(letters)):
        mapping = dict(zip(letters, perm))

   
        if any(mapping[word[0]] == 0 for word in puzzle.replace("+","=").split("=") if word.strip()):
            continue

        if is_valid(puzzle, letters, perm):
            print(f"\nSolution for {puzzle}:")
            for k, v in mapping.items():
                print(f"{k} = {v}")
            return
    print("No solution found.")


puzzle = input("Enter a crypt-arithmetic puzzle (e.g., SEND + MORE = MONEY): ").replace(" ", "")
solve_crypt_arithmetic(puzzle)
